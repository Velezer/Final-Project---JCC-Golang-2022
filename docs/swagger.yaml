definitions:
  controllers.CartInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controllers.CartItemInput:
    properties:
      count:
        minimum: 0
        type: integer
      product_id:
        type: integer
    required:
    - product_id
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.OrderInput:
    properties:
      cart_id:
        type: integer
      user_id:
        type: integer
    required:
    - cart_id
    - user_id
    type: object
  controllers.ProductInput:
    properties:
      categories:
        items:
          type: string
        type: array
      count:
        type: integer
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: integer
      store_id:
        type: integer
    required:
    - categories
    - count
    - description
    - image_url
    - name
    - price
    - store_id
    type: object
  controllers.RegisterInput:
    properties:
      address:
        type: string
      email:
        type: string
      password:
        type: string
      role:
        enum:
        - USER
        - MERCHANT
        type: string
      username:
        type: string
    required:
    - address
    - email
    - password
    - role
    - username
    type: object
  controllers.StoreInput:
    properties:
      address:
        type: string
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
    required:
    - address
    - description
    - image_url
    - name
    type: object
  controllers.changePasswordInput:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  controllers.updateProductInput:
    properties:
      categories:
        items:
          type: string
        type: array
      count:
        type: integer
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: integer
    required:
    - categories
    - count
    - description
    - image_url
    - name
    - price
    type: object
  controllers.updateStatusOrderInput:
    properties:
      status:
        enum:
        - CANCELLED
        - COMPLETED
        type: string
    required:
    - status
    type: object
  controllers.updateUser:
    properties:
      address:
        type: string
      email:
        description: gin binding is email but not required
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /carts:
    get:
      description: get user's cart with status is_checkout = false
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: get cart, user role must be USER
      tags:
      - Cart
    post:
      description: create cart
      parameters:
      - description: the body to create a Cart
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CartInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Create Cart, user role must be USER
      tags:
      - Cart
  /carts/{id}:
    delete:
      description: update cart name
      parameters:
      - description: cart id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: update cart, user role must be USER and must own the cart
      tags:
      - Cart
    put:
      description: update cart name
      parameters:
      - description: cart id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update a Cart
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CartInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: update cart, user role must be USER and must own the cart
      tags:
      - Cart
  /carts/{id}/items:
    put:
      description: will insert if not exist (based on product_id), will update the
        count if exist, will delete if count is 0
      parameters:
      - description: cart id
        in: path
        name: id
        required: true
        type: string
      - description: the body to add a cart item
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CartItemInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: add item || update count || delete item, user role must be USER and
        must own the cart
      tags:
      - Cart
  /orders:
    get:
      description: get orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: get Orders, anyone can use this
      tags:
      - Order
    post:
      description: create order
      parameters:
      - description: the body to create a Order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.OrderInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Create Order, user role must be USER
      tags:
      - Order
  /orders/{id}:
    delete:
      description: delete order
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: the body to delete a Order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.OrderInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: delete Order, user role must be MERCHANT
      tags:
      - Order
    put:
      description: update order
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: the body to delete a Order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.updateStatusOrderInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: pay || cancel Order, user role must be MERCHANT
      tags:
      - Order
  /products:
    get:
      description: get products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: get products, anyone can access
      tags:
      - Product
    post:
      description: create product
      parameters:
      - description: the body to create a Product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ProductInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Create Product, user role must be MERCHANT
      tags:
      - Product
  /products/{id}:
    delete:
      description: delete product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: delete product, user role must be MERCHANT
      tags:
      - Product
    put:
      description: update  product
      parameters:
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update a Product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.updateProductInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Update Product, user role must be MERCHANT
      tags:
      - Product
  /stores:
    get:
      description: get stores
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: get stores, anyone can use this
      tags:
      - Store
    post:
      description: Create Store
      parameters:
      - description: the body to create a Store
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.StoreInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Create Store, user role must be MERCHANT
      tags:
      - Store
  /stores/{id}:
    delete:
      description: delete store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: delete Store, user role must be MERCHANT and must own the store
      tags:
      - Store
    put:
      description: update store
      parameters:
      - description: store id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update a Store
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.StoreInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Update Store, user role must be MERCHANT and must own the store
      tags:
      - Store
  /user:
    delete:
      description: delete user
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: delete user based on jwt
      tags:
      - User
    get:
      description: get user
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: get user
      tags:
      - User
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - User
    put:
      description: update user info but can't change the role
      parameters:
      - description: the body to update a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.updateUser'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: update user info
      tags:
      - User
  /user/login:
    post:
      description: Logging in to get jwt token to access api by user's role.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - User
  /user/password:
    put:
      description: change user's password
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.changePasswordInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: change user's password
      tags:
      - User
swagger: "2.0"
